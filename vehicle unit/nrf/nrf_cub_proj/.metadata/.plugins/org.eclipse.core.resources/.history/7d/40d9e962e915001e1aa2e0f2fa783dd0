/*hspi1
 * NRF24l01.c
 *
 *  Created on: Jun 28, 2023
 *      Author: LENOVO
 */



#include "stm32f1xx_hal.h"

extern SPI_HandleTypeDef;

#define NRF24_SPI &hspi1


#define NRF24_CE_port   GPIOA
#define NRF24_CE_PIN    GPIO_PIN_0

#define NRF24_CSN_port   GPIOA
#define NRF24_CSN_PIN    GPIO_PIN_1

void CS_Select()
{
	HAL_GPIO_WritePin(NRF24_CS_port, NRF24_CS_PIN, GPIO_PIN_RESET);
}

void CS_UnSelect()
{
	HAL_GPIO_WritePin(NRF24_CS_port, NRF24_CS_PIN, GPIO_PIN_SET);
}



void CE_Enable()
{
	HAL_GPIO_WritePin(NRF24_CE_port, NRF24_CE_PIN, GPIO_PIN_SET);
}

void CE_Didable()
{
	HAL_GPIO_WritePin(NRF24_CE_port, NRF24_CE_PIN, GPIO_PIN_RESET);
}

void nrf_writeReg(uint8_t Reg,uint8_t Data)
{

	uint8_t buf[2];
	buf[0]= Reg|1<<5;
	buf[1]=Data;
	//pull cs pin low to select the device
	CS_Select();
	HAL_SPI_Transmit(NRF24_SPI, buf, 2,1000 );
	//pull cs pin to release the device
	CS_UnSelect();
}
void nrf_writeRegMultiData(uint8_t Reg,uint8_t *Data,int sizeofdata)
{

	uint8_t buf[2];
	buf[0]= Reg|1<<5;
	//buf[1]=Data;
	//pull cs pin low to select the device
	CS_Select();
	HAL_SPI_Transmit(NRF24_SPI, buf, 1,100 );
	HAL_SPI_Transmit(NRF24_SPI, Data, size,1000 );
	//pull cs pin to release the device
	CS_UnSelect();
}

uint8_t nrf_ReadReg(uint8_t Reg)
{
	uint8_t DATA=0;
	//pull cs pin low to select the device
	CS_Select();
	HAL_SPI_Transmit(NRF24_SPI, &reg, 1,100 );
	HAL_SPI_Receive(NRF24_SPI, &DATA, 1, 100);
	//pull cs pin to release the device
	CS_UnSelect();
	return DATA;
}

void nrf_ReadReg_MultiData(uint8_t Reg,uint8_t* DATA, int size )
{

	//pull cs pin low to select the device
	CS_Select();
	HAL_SPI_Transmit(NRF24_SPI, &reg, 1,100 );
	HAL_SPI_Receive(NRF24_SPI, DATA, size, 1000);
	//pull cs pin to release the device
	CS_UnSelect();

}


void sendCmd(uint8_t cmd)
{
	//pull cs pin low to select the device
	CS_Select();
	HAL_SPI_Transmit(NRF24_SPI, &cmd, 1,100 );
	//pull cs pin to release the device
	CS_UnSelect();
}
